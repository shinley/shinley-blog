(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{184:function(a,t,s){"use strict";s.r(t);var e=s(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"_6-mysql索引-二"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-mysql索引-二","aria-hidden":"true"}},[a._v("#")]),a._v(" 6.MySQL索引(二)")]),a._v(" "),s("h2",{attrs:{id:"mysql索引分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mysql索引分类","aria-hidden":"true"}},[a._v("#")]),a._v(" MySQL索引分类")]),a._v(" "),s("ul",[s("li",[a._v("BTree索引")]),a._v(" "),s("li",[a._v("Hash索引")]),a._v(" "),s("li",[a._v("full-text全文索引")]),a._v(" "),s("li",[a._v("R-tree索引")])]),a._v(" "),s("p",[a._v("MySQL官方对索引的定义为：索引（Inex）是帮助MySQL高效获取数据的数据结构。")]),a._v(" "),s("p",[a._v("索引的目的在于提高查询效率， 可以类比字典。")]),a._v(" "),s("p",[a._v("索引可以影响 查询条件和排序")]),a._v(" "),s("h2",{attrs:{id:"单值索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单值索引","aria-hidden":"true"}},[a._v("#")]),a._v(" 单值索引")]),a._v(" "),s("p",[a._v("即一个索引只包含单个列，一个表可以有多个单列索引")]),a._v(" "),s("h2",{attrs:{id:"唯一索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#唯一索引","aria-hidden":"true"}},[a._v("#")]),a._v(" 唯一索引")]),a._v(" "),s("p",[a._v("索引列的值必须唯一，但允许有空值")]),a._v(" "),s("h2",{attrs:{id:"复合索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复合索引","aria-hidden":"true"}},[a._v("#")]),a._v(" 复合索引")]),a._v(" "),s("p",[a._v("即一个索引包含多个列")]),a._v(" "),s("h2",{attrs:{id:"基本语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本语法","aria-hidden":"true"}},[a._v("#")]),a._v(" 基本语法")]),a._v(" "),s("h4",{attrs:{id:"创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建","aria-hidden":"true"}},[a._v("#")]),a._v(" 创建")]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[a._v("CREATE")]),a._v(" "),s("span",{attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{attrs:{class:"token keyword"}},[a._v("UNIQUE")]),s("span",{attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("INDEX")]),a._v(" indexName "),s("span",{attrs:{class:"token keyword"}},[a._v("on")]),a._v(" myTable"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),a._v("columnName"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),a._v("length"),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n\n")])])]),s("h4",{attrs:{id:"删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除","aria-hidden":"true"}},[a._v("#")]),a._v(" 删除")]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[a._v("DROP")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("INDEX")]),a._v(" "),s("span",{attrs:{class:"token punctuation"}},[a._v("[")]),a._v("indexName"),s("span",{attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("ON")]),a._v(" myTable"),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h4",{attrs:{id:"查看"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看","aria-hidden":"true"}},[a._v("#")]),a._v(" 查看")]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[a._v("SHOW")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("INDEX")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" table_name\\g\n")])])]),s("h4",{attrs:{id:"修改索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改索引","aria-hidden":"true"}},[a._v("#")]),a._v(" 修改索引")]),a._v(" "),s("p",[a._v("有四种方式来添加数据表的索引")]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[a._v("ALTER")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("TABLE")]),a._v(" tbl_name "),s("span",{attrs:{class:"token keyword"}},[a._v("ADD")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("PRIMARY")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("KEY")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),a._v("column_list"),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" 该语句添加一个主键， 这意味着索引值必须是唯一的，且不能为"),s("span",{attrs:{class:"token boolean"}},[a._v("NULL")]),a._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[a._v("ALTER")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("TABLE")]),a._v(" tbl_name "),s("span",{attrs:{class:"token keyword"}},[a._v("ADD")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("UNIQUE")]),a._v(" index_name"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),a._v("column_list"),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" 创建索引的值是唯一的（除"),s("span",{attrs:{class:"token boolean"}},[a._v("NULL")]),a._v("外，"),s("span",{attrs:{class:"token boolean"}},[a._v("NULL")]),a._v(" 可能出现多次）\n\n"),s("span",{attrs:{class:"token keyword"}},[a._v("ALTER")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("TABLE")]),a._v(" tbl_name "),s("span",{attrs:{class:"token keyword"}},[a._v("ADD")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("INDEX")]),a._v(" index_name"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),a._v("column_list"),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" 添加普通索引，索引值可出现多次\n\n"),s("span",{attrs:{class:"token keyword"}},[a._v("ALTER")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("TABLE")]),a._v(" tbl_name "),s("span",{attrs:{class:"token keyword"}},[a._v("ADD")]),a._v(" FULLTEXT index_name"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),a._v("column_list"),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("创建全文索引\n")])])]),s("h2",{attrs:{id:"需要建索引的情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#需要建索引的情况","aria-hidden":"true"}},[a._v("#")]),a._v(" 需要建索引的情况")]),a._v(" "),s("ul",[s("li",[a._v("1.主键自动建立唯一索引")]),a._v(" "),s("li",[a._v("2.频繁作为查询条件的字段应该创建索")]),a._v(" "),s("li",[a._v("3.查询中与其它表关联的字段，外键关系建立索引")]),a._v(" "),s("li",[a._v("4.频繁更新的字段不适合创建索引")]),a._v(" "),s("li",[a._v("5.Where 条件里用不到的字段不创建索引")]),a._v(" "),s("li",[a._v("6.单键/组合索引的选择问题，who?(在高并发下倾向创建组合索引)")]),a._v(" "),s("li",[a._v("7.查询中排序的字段，排序字段若通索引去访问将大提高排序速度。")]),a._v(" "),s("li",[a._v("8.查询中统计或者分组字段")])]),a._v(" "),s("h2",{attrs:{id:"哪引动情况不需要建索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哪引动情况不需要建索引","aria-hidden":"true"}},[a._v("#")]),a._v(" 哪引动情况不需要建索引")]),a._v(" "),s("ul",[s("li",[a._v("1.表记录太少")]),a._v(" "),s("li",[a._v("2.经常增删改的表")]),a._v(" "),s("li",[a._v("3.重复且分布平均的表字段。比如性别")])]),a._v(" "),s("h2",{attrs:{id:"性能分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能分析","aria-hidden":"true"}},[a._v("#")]),a._v(" 性能分析")]),a._v(" "),s("h4",{attrs:{id:"explain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#explain","aria-hidden":"true"}},[a._v("#")]),a._v(" Explain")]),a._v(" "),s("p",[a._v("使用Explain关键字可以模拟优化器执行SQL查询语句，从而知道 MySQL是如何处理你的SQL语句的。分析你的查询语句或是表结构的性能瓶颈。")]),a._v(" "),s("h4",{attrs:{id:"语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法","aria-hidden":"true"}},[a._v("#")]),a._v(" 语法")]),a._v(" "),s("p",[a._v("explain + SQL")]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[a._v("mysql"),s("span",{attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("explain")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("select")]),a._v(" "),s("span",{attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("from")]),a._v("  tbl_emp"),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{attrs:{class:"token operator"}},[a._v("+")]),s("span",{attrs:{class:"token comment"}},[a._v("----+-------------+---------+------------+------+---------------+------+---------+------+------+----------+-------+")]),a._v("\n"),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" id "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" select_type "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("table")]),a._v("   "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" partitions "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("type")]),a._v(" "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" possible_keys "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("key")]),a._v("  "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" key_len "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" ref  "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("rows")]),a._v(" "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" filtered "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" Extra "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v("\n"),s("span",{attrs:{class:"token operator"}},[a._v("+")]),s("span",{attrs:{class:"token comment"}},[a._v("----+-------------+---------+------------+------+---------------+------+---------+------+------+----------+-------+")]),a._v("\n"),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v("  "),s("span",{attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("SIMPLE")]),a._v("      "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" tbl_emp "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{attrs:{class:"token boolean"}},[a._v("NULL")]),a._v("       "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("ALL")]),a._v("  "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{attrs:{class:"token boolean"}},[a._v("NULL")]),a._v("          "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{attrs:{class:"token boolean"}},[a._v("NULL")]),a._v(" "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{attrs:{class:"token boolean"}},[a._v("NULL")]),a._v("    "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{attrs:{class:"token boolean"}},[a._v("NULL")]),a._v(" "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v("    "),s("span",{attrs:{class:"token number"}},[a._v("8")]),a._v(" "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v("   "),s("span",{attrs:{class:"token number"}},[a._v("100.00")]),a._v(" "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{attrs:{class:"token boolean"}},[a._v("NULL")]),a._v("  "),s("span",{attrs:{class:"token operator"}},[a._v("|")]),a._v("\n"),s("span",{attrs:{class:"token operator"}},[a._v("+")]),s("span",{attrs:{class:"token comment"}},[a._v("----+-------------+---------+------------+------+---------------+------+---------+------+------+----------+-------+")]),a._v("\n"),s("span",{attrs:{class:"token number"}},[a._v("1")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("row")]),a._v(" "),s("span",{attrs:{class:"token operator"}},[a._v("in")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("set")]),s("span",{attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{attrs:{class:"token number"}},[a._v("1")]),a._v(" warning "),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token number"}},[a._v("0.00")]),a._v(" sec"),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),s("h4",{attrs:{id:"作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用","aria-hidden":"true"}},[a._v("#")]),a._v(" 作用")]),a._v(" "),s("ul",[s("li",[a._v("表的读取顺序")]),a._v(" "),s("li",[a._v("数据读取操作的操作类型")]),a._v(" "),s("li",[a._v("哪些索引可以使用")]),a._v(" "),s("li",[a._v("哪些索引被实际使用")]),a._v(" "),s("li",[a._v("表之间的引用")]),a._v(" "),s("li",[a._v("每张表有多少行被优化器查询")])]),a._v(" "),s("h5",{attrs:{id:"id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#id","aria-hidden":"true"}},[a._v("#")]),a._v(" id")]),a._v(" "),s("p",[a._v("select查询的序列号，包含一组数字，表示查询中执行select子句或操作表的顺序")]),a._v(" "),s("p",[a._v("三种情况：")]),a._v(" "),s("ul",[s("li",[a._v("id 相同，执行顺序由上至下")])]),a._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[a._v("explain")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("select")]),a._v(" t2"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("from")]),a._v(" t1"),s("span",{attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" t2"),s("span",{attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" t3 "),s("span",{attrs:{class:"token keyword"}},[a._v("where")]),a._v(" t1"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("id "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" t2"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("id "),s("span",{attrs:{class:"token operator"}},[a._v("and")]),a._v(" t1"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("id "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" t3"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("id "),s("span",{attrs:{class:"token operator"}},[a._v("and")]),a._v(" t1"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("other_column"),s("span",{attrs:{class:"token operator"}},[a._v("=")]),s("span",{attrs:{class:"token string"}},[a._v("''")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("ul",[s("li",[a._v("id不同，如果是子查询,id 序号会递增，id值越大优先级越高，越先被执行")]),a._v(" "),s("li",[a._v("id即有相同，又有不同。 id 值越大，越先被执行，然后相同的顺序执行。")])]),a._v(" "),s("p",[a._v("id 如果相同，可以认为是一组，从上往下顺序扩行；在所有组中，id值越大，优先级越高，越先执行。")]),a._v(" "),s("h4",{attrs:{id:"select-type"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#select-type","aria-hidden":"true"}},[a._v("#")]),a._v(" select_type")]),a._v(" "),s("ul",[s("li",[a._v("SIMPLE    简单的select 查询，查询中不包含子查询或者union")]),a._v(" "),s("li",[a._v("PRIMARY   查询中若包含任何复杂的子查询，最外层查询则被标记为PRIMARY")]),a._v(" "),s("li",[a._v("SUBQUERY  在SELECT或WHERE列表中包含了子查询")]),a._v(" "),s("li",[a._v("DERIVED   在FROM列表中包含的子查询被标记为DERIVED(衍生)表，MySQL会递归执行这些子查询，把结果放在临时表里。")]),a._v(" "),s("li",[a._v("UNION     若第个SELECT出现在UNION 之后，则被标记为UNION;若UNION包含在FROM子句的子查询中，外层将被标记为：DERIVED")]),a._v(" "),s("li",[a._v("UNION RESULT 从UNION表获取结的SELECT， 也就是联合查询后的结果")])]),a._v(" "),s("h4",{attrs:{id:"table-显示这一行的数是关于哪张表的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#table-显示这一行的数是关于哪张表的","aria-hidden":"true"}},[a._v("#")]),a._v(" table 显示这一行的数是关于哪张表的")]),a._v(" "),s("h4",{attrs:{id:"type-访问类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#type-访问类型","aria-hidden":"true"}},[a._v("#")]),a._v(" type 访问类型")]),a._v(" "),s("p",[a._v("显示查询使用了何种类型")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("ALL")])]),a._v(" "),s("li",[s("p",[a._v("index")])]),a._v(" "),s("li",[s("p",[a._v("range")])]),a._v(" "),s("li",[s("p",[a._v("ref")])]),a._v(" "),s("li",[s("p",[a._v("eq_ref")])]),a._v(" "),s("li",[s("p",[a._v("const, system")])]),a._v(" "),s("li",[s("p",[a._v("null")])]),a._v(" "),s("li",[s("p",[a._v("system 表只有一行记录(等同于系统表)，这是const类型的特例，平不会出现，这个也可以忽略不计")])]),a._v(" "),s("li",[s("p",[a._v("const 表示通过索引一次就找到了，const用于比较primary key或者unique索引。因为只匹配一行数据，所以很快。如果将主键置于where列表中，MySQL就能将该查询转换为一个常量。")])]),a._v(" "),s("li",[s("p",[a._v("eq_ref 唯一性索引扫描，对于每个索引键，表中只有一条记录与之匹配。常见于主键或唯一索引扫描 。")])]),a._v(" "),s("li",[s("p",[a._v("ref 非唯一性索引扫描，返回匹配某人单独值的所有行。本质上也是一种索引访问，它返回所有匹配某个单独值的行。然而，它可能会找到多个符合条件的行，所以他应该属于查找和扫描的混合体")])]),a._v(" "),s("li",[s("p",[a._v("range 只检索给定范围的行，使用一个索引来选择行。key列显示使用了哪个索引。一般就是在你的 where语句中出现了between <  > in 等的查询。这种范围索引扫描比全表扫描要好，因为它只需要开始于索引的某一点，而结束于另一点，不用扫描全部索引。")])]),a._v(" "),s("li",[s("p",[a._v("index   Full Index Scan, index与ALL区别为index类型只遍历索引树。这通常比ALL快，因为索引文件通常比数据文件小。也就是说虽然all和Index都是读全表，但index是从索引中读取的，而all是从硬盘中读的。")])]),a._v(" "),s("li",[s("p",[a._v("ALL 全表抛扫描\n常见的从最好到最差依次是：")])])]),a._v(" "),s("p",[a._v("System > const > eq_ref > ref >range > index > ALL")]),a._v(" "),s("p",[a._v("一般来说，得保证查询至少达到 range和ref级别")]),a._v(" "),s("p",[a._v("key 实际使用的索引。如果为NULL ，则没有使用索引。查询中若使用了覆盖索引，则该索引仅出现在key列表中。")]),a._v(" "),s("h2",{attrs:{id:"覆盖索引："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#覆盖索引：","aria-hidden":"true"}},[a._v("#")]),a._v(" 覆盖索引：")]),a._v(" "),s("p",[a._v("使查询的字段，和建索引的字段和顺序相同。")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("possible_keys 显示可能应用到这张表中的索引，一个或多个。查询涉及到的字段上若存在索引，则该索引将被列出，但不一定被查询实际使用。")])]),a._v(" "),s("li",[s("p",[a._v("key_len 表示索引中使用的字节数，可通过该列计算查询中使用的索引的长度。在不损失精确性的情况下，长度越短越好。\nkey_len显示的值为索引字估的最大可能长度，并非实际使用长度，即key_len是根据表定义计算而得，不是通过表内检索出的。")])]),a._v(" "),s("li",[s("p",[a._v("ref 显示索引的哪一列被使用了，如果可能的话，是一个常数。哪些列或常量被用于查找索引列上的值。")])]),a._v(" "),s("li",[s("p",[a._v("rows 根据表统计信息及索引选用情况， 大致估算出找到所需的记所需要读取的行数。")])]),a._v(" "),s("li",[s("p",[a._v("Extra 包含 不适合在其他列中显示，但十分重要的额外信息。")])]),a._v(" "),s("li",[s("p",[a._v("Using filesort 说明MySQL会对数据使用一个外部的索引排序， 而不是按照表内的索引顺序进行读取。MySQL中无法利用索引完成排序操作称为“文件排序”。")])]),a._v(" "),s("li",[s("p",[a._v("Using temporary 使用了临时表保存中间结果，MySQL在对查询结果排序时使用临时表。常见于排序ORDER BY 和分组查询group by")])]),a._v(" "),s("li",[s("p",[a._v("Using index 表示相应的SELECT操作中使用了覆盖索引(Covering Index),避免访问了表的数据行，效率不错！如果同时出现Using where，表明索引被用来执行索引键值的查找；如果没有同时出现Using where，表明索引用来读取数据而非执行查找动作。直接从索引上读取到了数据，并没有执行查找表的数据。")])])]),a._v(" "),s("h4",{attrs:{id:"覆盖索引（covering-index）-一说索引覆盖。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#覆盖索引（covering-index）-一说索引覆盖。","aria-hidden":"true"}},[a._v("#")]),a._v(" 覆盖索引（Covering Index）, 一说索引覆盖。")]),a._v(" "),s("p",[a._v("就是select的数据列只用从索引中就能够取得，不必读取数据行，MySQL可以利用索引返回Select列表中的字段，而不必根据索引再次读取数据文 件，换句话说查询列要被所建的索引覆盖。")]),a._v(" "),s("p",[s("strong",[a._v("注意：")]),a._v(" 如果要使用覆盖索引，一定要注意select列表中只取出需要的列，不可select *,因为如果将所有字段一起做索引会导致索引文件过大，查询性能下降。")]),a._v(" "),s("ul",[s("li",[a._v("using where                   使用了where过滤")]),a._v(" "),s("li",[a._v("using join buffer             使用了连接缓存")]),a._v(" "),s("li",[a._v("impossible where              where 子句的值总是false， 不能用来获取任何元组。")]),a._v(" "),s("li",[a._v("select tables optimized away  在没有GROUPBY 子句的情况下，基于索引优化MIN/MAX操作或者对于MyISAM存储引擎优化COUNT(*)操作，不必等到执行阶段再进行计算，查询执行计划生成的除段即完成优化。")]),a._v(" "),s("li",[a._v("distinct 优化DISTINCK 操作，在找到第一个匹配的元组后即停止找同样值的动作。")])])])}],!1,null,null,null);n.options.__file="6.MySQL索引02.md";t.default=n.exports}}]);